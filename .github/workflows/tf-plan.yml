name: Terraform Plan

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'infra/tf/**'


permissions:
  issues: write
  pull-requests: write
      
jobs:
  terraform:
    strategy:
      matrix:
        environment: [dev, prod]

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: git config
      id: init_github
      working-directory: infra/tf
      env:
        SECRET_GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      if: "${{ env.SECRET_GIT_TOKEN != '' }}"
      run: |
        git config --global url."https://oauth2:${{ secrets.GIT_TOKEN }}@github.com".insteadOf ssh://git@github.com

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Authenticate with GCP
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    - id: init
      run: terraform init
      working-directory: infra/tf

    - name: Select Workspace
      run: |
        terraform workspace select ${{ matrix.environment }} || terraform workspace new ${{ matrix.environment }}
      working-directory: infra/tf

    - id: plan
      run: terraform plan -var-file=env/${{ matrix.environment }}.tfvars -no-color
      working-directory: infra/tf

    - name: Format and Comment TF Plan
      uses: actions/github-script@v6
      env:
        PLAN: |
          terraform
          ${{ steps.plan.outputs.stdout }}
      if: github.event_name == 'pull_request' && !contains(env.PLAN,'No changes. Your infrastructure matches the configuration.')
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `## ${{ matrix.environment }}
          #### Terraform Initialization :gear: \`${{ steps.init.outcome }}\`
          #### Terraform Plan :book: \`${{ steps.plan.outcome }}\`
  
          <details><summary>Show Plan</summary>
  
          \`\`\`${process.env.PLAN}\`\`\`
  
          </details>
  
          Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`
  
          Comment to apply these changes to the current environment`;
  
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })