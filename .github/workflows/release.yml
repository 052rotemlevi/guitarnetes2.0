name: New Release

on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Type of version increment to apply (major, minor, patch)'
        required: true
        default: 'patch'
      promote-echo-server:
        description: 'Promote Echo Server?'
        required: true
        type: boolean
      promote-frontend:
        description: 'Promote Frontend?'
        required: true
        type: boolean

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  promote-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [echo-server, frontend]
    steps:
      - name: Set Promotion Flags
        id: set-flags
        run: |
          echo "PROMOTE_ECHO_SERVER=${{ github.event.inputs.promote-echo-server }}" >> $GITHUB_ENV
          echo "PROMOTE_FRONTEND=${{ github.event.inputs.promote-frontend }}" >> $GITHUB_ENV

      - name: Promote and Build ${{ matrix.service }}
        if: ${{ (matrix.service == 'echo-server' && env.PROMOTE_ECHO_SERVER == 'true') || (matrix.service == 'frontend' && env.PROMOTE_FRONTEND == 'true') }}
        uses: ./.github/workflows/promote-build.yml@main
        with:
          service-name: ${{ matrix.service }}
          version-type: ${{ github.event.inputs.version-type }}
          service-path: app/${{ matrix.service }}

  create-release:
    needs: [promote-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      - name: Create GitHub Release
        if: ${{ github.event.inputs.version-type == 'minor' || github.event.inputs.version-type == 'major' }}
        run: |
          sudo apt-get install -y gh
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh release create ${{ env.new_version }} --title "Release ${{ env.new_version }}" --notes "## Changes in this release\n\n- Version update to ${{ env.new_version }}"
