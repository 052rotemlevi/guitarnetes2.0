name: New Release

on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Type of version increment to apply (major, minor, patch)'
        required: true
        default: 'patch'
      promote-echo-server:
        description: 'Promote Echo Server?'
        required: true
        type: boolean
      promote-frontend:
        description: 'Promote Frontend?'
        required: true
        type: boolean
      build-microservices:
        description: 'Build new Docker images?'
        required: true
        type: boolean

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  VERSION_FILE: ./app/version.txt

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
  promote-app:
      uses: ./.github/workflows/promote.yml
      with:
        service-name: app
        version-type: ${{ github.event.inputs.version-type }}
        service-path: ./app

  get-new-version:
    runs-on: ubuntu-latest
    steps:
      - name: Upgrade version
        id: upgrade_version 
        run: |
         echo "new_version=$(cat $VERSION_FILE)" >> $GITHUB_ENV

  promote-echo-server:
    if: ${{ github.event.inputs.promote-echo-server }}
    needs: promote-app
    uses: ./.github/workflows/promote.yml
    with:
      service-name: echo-server
      version-type: ${{ github.event.inputs.version-type }}
      service-path: ./app/echo-server

  promote-frontend:
    if: ${{ github.event.inputs.promote-frontend }}
    needs: promote-app
    uses: ./.github/workflows/promote.yml
    with:
      service-name: frontend
      version-type: ${{ github.event.inputs.version-type }}
      service-path: ./app/frontend

  build-microservices:
    if: ${{ github.event.inputs.build-microservices }}
    needs: [promote-echo-server, promote-frontend]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [echo-server, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app/${{ matrix.service }}
          file: ./app/${{ matrix.service }}/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:${{ env.new_version }}

  create-release:
    runs-on: ubuntu-latest
    needs: [promote-app, promote-echo-server, promote-frontend, build-microservices]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create GitHub Release
        run: |
          sudo apt-get install -y gh
          newVersion=${{ env.new_version }}
          release_notes="## Changes in this release\n\n- Version update to $newVersion\n"
          if ${{ github.event.inputs.promote-echo-server }}; then
            release_notes+="\n- Echo Server promoted to version $newVersion\n"
          fi
          if ${{ github.event.inputs.promote-frontend }}; then
            release_notes+="\n- Frontend promoted to version $newVersion\n"
          fi
          gh release create v$newVersion -t v$newVersion --title "Release $newVersion" --notes "$release_notes"
